{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/openactive/azure-rpde-proxy.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "globallyUniqueEndpointSubdomain": {
      "type": "string",
      "defaultValue": "lmscloud-openactive-proxy",
      "metadata": {
        "description": "Subdomain used in the web address of proxied OpenActive endpoints: https://{subdomain}.azurewebsites.net/api/feeds/"
      }
    },
    "resourcePostfix": {
      "type": "string",
      "defaultValue": "live",
      "metadata": {
        "description": "Postfix to help identify the deployed resource."
      }
    },
    "scaling": {
      "type": "string",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "defaultValue": "Dynamic",
      "metadata": {
        "description": "Scaling approach used for functions. There is a tipping point of between 50-100 clients where static becomes more cost effective."
      }
    },
    "organizationName": {
      "type": "string",
      "defaultValue": "Acme Systems",
      "metadata": {
        "description": "The name of the organization providing this proxy."
      }
    },
    "organizationURL": {
      "type": "string",
      "defaultValue": "https://www.example.com/",
      "metadata": {
        "description": "The website URL of the organization providing this proxy."
      }
    }
  },
  "variables": {
    "resourcePostfix": "[concat('openactive-proxy-', parameters('resourcePostfix'), '-', uniqueString(resourceGroup().id))]",
    "serviceBusNamespaceName": "[concat('servicebus', '-', variables('resourcePostfix'))]",
    "appInsightsServiceName": "[concat('appinsights', '-', variables('resourcePostfix'))]",
    "hostingPlanName": "[concat('hostingplan', '-', variables('resourcePostfix'))]",
    "sqlserverName": "[concat('sqlserver', '-', variables('resourcePostfix'))]",
    "sqlserverAdminLogin": "[concat('l', uniqueString(resourceGroup().id, '9A08DDB9-95A1-495F-9263-D89738ED4205'))]",
    "sqlserverAdminLoginPassword": "[concat('P', uniqueString(resourceGroup().id, deployment().name, '224F5A8B-51DB-46A3-A7C8-59B0DD584A41'), 'x', '!')]",
    "databaseName": "[concat('openactive-proxy-', parameters('resourcePostfix'))]",
    "functionAppName": "[parameters('globallyUniqueEndpointSubdomain')]",
    "storageAccountName": "[concat('openactive', uniqueString(resourceGroup().id))]",
    "computeMode": "[if(equals(parameters('scaling'),'Dynamic'), 'Dynamic', 'Shared')]",
    "sku": "[if(equals(parameters('scaling'),'Dynamic'), 'Dynamic', 'Basic')]",
    "alwaysOn": "[if(equals(parameters('scaling'),'Dynamic'), 'false', 'true')]",
    "feedBaseUrl": "[concat('https://', parameters('globallyUniqueEndpointSubdomain'), '.azurewebsites.net/')]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
    "serviceBusQueueNamePurge": "purge",
    "serviceBusQueueNameFeedstate": "feedstate",
    "serviceBusQueueNameRegistration": "registration",
    "functionNameRegistration": "Registration",
    "functionNameStatus": "Status"
  },
  "resources": [
    {
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('sqlserverName')]",
      "properties": {
        "administratorLogin": "[variables('sqlserverAdminLogin')]",
        "administratorLoginPassword": "[variables('sqlserverAdminLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "tags": {
            "displayName": "Database"
          },
          "name": "[variables('databaseName')]",
          "type": "databases",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-01-01",
          "properties": {
            "edition": "Standard",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "5368709120",
            "requestedServiceObjectiveName": "S1"
          },
          "resources": [
            {
              "tags": {
                "displayName": "BackupPolicies"
              },
              "name": "Default",
              "type": "backupShortTermRetentionPolicies",
              "dependsOn": [
                "[resourceId('Microsoft.SQL/servers/databases', variables('sqlserverName'), variables('databaseName'))]"
              ],
              "apiVersion": "2017-10-01-preview",
              "properties": {
                "retentionDays": "7"
              }
            }
          ]
        },
        {
          "type": "firewallrules",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "apiVersion": "2014-04-01",
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        },
        {
          "type": "firewallrules",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "apiVersion": "2014-04-01",
          "location": "[resourceGroup().location]",
          "name": "AllowAllExternalIPsForDebug",
          "properties": {
            "endIpAddress": "255.255.255.255",
            "startIpAddress": "0.0.0.0"
          }
        }
      ],
      "type": "Microsoft.Sql/servers"
    },
    {
      "tags": {
        "displayName": "StorageAccount"
      },
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "tags": {
        "displayName": "ServiceBus"
      },
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic"
      },
      "properties": {},
      "resources": [
        {
          "tags": {
            "displayName": "PurgeQueue"
          },
          "apiVersion": "2017-04-01",
          "name": "[variables('serviceBusQueueNamePurge')]",
          "type": "Queues",
          "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": "1024",
            "requiresDuplicateDetection": "false",
            "requiresSession": "false",
            "defaultMessageTimeToLive": "P14D",
            "deadLetteringOnMessageExpiration": "false",
            "maxDeliveryCount": "50",
            "enablePartitioning": "false",
            "enableExpress": "false"
          }
        },
        {
          "tags": {
            "displayName": "FeedstateQueue"
          },
          "apiVersion": "2017-04-01",
          "name": "[variables('serviceBusQueueNameFeedstate')]",
          "type": "Queues",
          "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": "1024",
            "requiresDuplicateDetection": "false",
            "requiresSession": "false",
            "defaultMessageTimeToLive": "P14D",
            "deadLetteringOnMessageExpiration": "true",
            "maxDeliveryCount": "10",
            "enablePartitioning": "false",
            "enableExpress": "false"
          }
        },
        {
          "tags": {
            "displayName": "RegistrationQueue"
          },
          "apiVersion": "2017-04-01",
          "name": "[variables('serviceBusQueueNameRegistration')]",
          "type": "Queues",
          "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": "1024",
            "requiresDuplicateDetection": "false",
            "requiresSession": "false",
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": "false",
            "maxDeliveryCount": "10",
            "enablePartitioning": "false",
            "enableExpress": "false"
          }
        }
      ]
    },
    {
      "tags": {
        "displayName": "Insights"
      },
      "type": "microsoft.insights/components",
      "kind": "other",
      "name": "[variables('appInsightsServiceName')]",
      "apiVersion": "2014-04-01",
      "location": "UK South",
      "scale": null,
      "properties": {
        "ApplicationId": "[variables('appInsightsServiceName')]"
      },
      "dependsOn": []
    },
    {
      "tags": {
        "displayName": "ServerFarm"
      },
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "[variables('computeMode')]",
        "sku": "[variables('sku')]"
      }
    },
    {
      "tags": {
        "displayName": "Sites"
      },
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "properties": {
        "name": "[variables('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "hostingEnvironment": "",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "alwaysOn": "[bool(variables('alwaysOn'))]",
          "use32BitWorkerProcess": false,
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "MSDEPLOY_RENAME_LOCKED_FILES",
              "value": "1"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ClearProxyCache",
              "value": "false"
            },
            {
              "name": "FeedBaseUrl",
              "value": "[variables('feedBaseUrl')]"
            },
            {
              "name": "OrganizationName",
              "value": "[parameters('organizationName')]"
            },
            {
              "name": "OrganizationUrl",
              "value": "[parameters('organizationURL')]"
            },
            {
              "name": "SqlServerConnection",
              "value": "[concat('Server=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';Persist Security Info=False;User ID=', variables('sqlserverAdminLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', variables('sqlserverAdminLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            {
              "name": "ServiceBusConnection",
              "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
            },
            {
              "name": "Project",
              "value": "AzureRpdeProxy"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsServiceName'))).InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('microsoft.insights/components', variables('appInsightsServiceName'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
      ],
      "resources": [
        {
          "tags": {
            "displayName": "SourceControls"
          },
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }

  ],
  "outputs": {
    "azureProxyHost": {
      "type": "string",
      "value": "[concat('https://',reference(concat('Microsoft.Web/sites/', variables('functionAppName'))).hostnames[0],'/')]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName]"
    },
    "sqlServerUsername": {
      "type": "string",
      "value": "[variables('sqlserverAdminLogin')]"
    },
    "sqlServerPassword": {
      "type": "string",
      "value": "[variables('sqlserverAdminLoginPassword')]"
    }
  }
}
